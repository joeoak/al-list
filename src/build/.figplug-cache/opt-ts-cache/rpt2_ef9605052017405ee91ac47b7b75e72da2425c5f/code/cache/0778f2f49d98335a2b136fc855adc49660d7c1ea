{"code":"const drawList = async (selection, listStyle) => {\r\n    await figma.loadFontAsync(selection.fontName);\r\n    let newList = figma.createFrame();\r\n    Object.assign(newList, {\r\n        counterAxisSizingMode: 'AUTO',\r\n        fills: [],\r\n        itemSpacing: selection.paragraphSpacing,\r\n        layoutMode: 'VERTICAL',\r\n        name: 'ul',\r\n        x: selection.x,\r\n        y: selection.y,\r\n    });\r\n    const textArr = parseText(selection.characters);\r\n    for (let i = 0; i < textArr.length; i++) {\r\n        let newFrame = figma.createFrame();\r\n        Object.assign(newFrame, {\r\n            counterAxisSizingMode: 'AUTO',\r\n            fills: [],\r\n            layoutMode: 'HORIZONTAL',\r\n            name: 'li',\r\n        });\r\n        let newBullet = selection.clone();\r\n        Object.assign(newBullet, {\r\n            textAlignHorizontal: 'CENTER',\r\n            textAlignVertical: 'TOP',\r\n            textAutoResize: 'HEIGHT',\r\n        });\r\n        if (listStyle === 'bullet') {\r\n            newBullet.characters = 'â€¢';\r\n        }\r\n        else if (listStyle === 'hyphen') {\r\n            newBullet.characters = '-';\r\n        }\r\n        newBullet.resize(selection.lineHeight.value, selection.lineHeight.value);\r\n        let newText = selection.clone();\r\n        Object.assign(newText, {\r\n            characters: textArr[i],\r\n            textAlignHorizontal: 'LEFT',\r\n            textAlignVertical: 'TOP',\r\n            textAutoResize: 'HEIGHT',\r\n        });\r\n        newText.resize(selection.width - selection.lineHeight.value, selection.lineHeight.value);\r\n        newFrame.appendChild(newBullet);\r\n        newFrame.appendChild(newText);\r\n        newList.appendChild(newFrame);\r\n    }\r\n    figma.currentPage.appendChild(newList);\r\n    selection.remove();\r\n};\r\nconst parseText = (str) => {\r\n    let arr = str.split(/\\n/g);\r\n    return arr;\r\n};\r\nexport { drawList };\r\n//# sourceMappingURL=functions.js.map","references":[],"map":"{\"version\":3,\"file\":\"functions.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../functions.ts\"],\"names\":[],\"mappings\":\"AAAA,MAAM,QAAQ,GAAG,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,EAAE;IAE5C,MAAM,KAAK,CAAC,aAAa,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;IAE9C,IAAI,OAAO,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;IAClC,MAAM,CAAC,MAAM,CAAC,OAAO,EACrB;QACI,qBAAqB,EAAE,MAAM;QAC7B,KAAK,EAAE,EAAE;QACT,WAAW,EAAE,SAAS,CAAC,gBAAgB;QACvC,UAAU,EAAE,UAAU;QACtB,IAAI,EAAE,IAAI;QACV,CAAC,EAAE,SAAS,CAAC,CAAC;QACd,CAAC,EAAE,SAAS,CAAC,CAAC;KACjB,CAAC,CAAA;IAEF,MAAM,OAAO,GAAG,SAAS,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;IAEhD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EACvC;QACI,IAAI,QAAQ,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;QACnC,MAAM,CAAC,MAAM,CAAC,QAAQ,EACtB;YACI,qBAAqB,EAAE,MAAM;YAC7B,KAAK,EAAE,EAAE;YACT,UAAU,EAAE,YAAY;YACxB,IAAI,EAAE,IAAI;SACb,CAAC,CAAA;QAEF,IAAI,SAAS,GAAG,SAAS,CAAC,KAAK,EAAE,CAAC;QAClC,MAAM,CAAC,MAAM,CAAC,SAAS,EACvB;YACI,mBAAmB,EAAE,QAAQ;YAC7B,iBAAiB,EAAE,KAAK;YACxB,cAAc,EAAE,QAAQ;SAC3B,CAAC,CAAA;QACF,IAAI,SAAS,KAAK,QAAQ,EAC1B;YACI,SAAS,CAAC,UAAU,GAAG,GAAG,CAAC;SAC9B;aACI,IAAI,SAAS,KAAK,QAAQ,EAC/B;YACI,SAAS,CAAC,UAAU,GAAG,GAAG,CAAC;SAC9B;QACD,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,KAAK,EAAE,SAAS,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAEzE,IAAI,OAAO,GAAG,SAAS,CAAC,KAAK,EAAE,CAAC;QAChC,MAAM,CAAC,MAAM,CAAC,OAAO,EACrB;YACI,UAAU,EAAE,OAAO,CAAC,CAAC,CAAC;YACtB,mBAAmB,EAAE,MAAM;YAC3B,iBAAiB,EAAE,KAAK;YACxB,cAAc,EAAE,QAAQ;SAC3B,CAAC,CAAA;QACF,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,CAAC,UAAU,CAAC,KAAK,EAAE,SAAS,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAGzF,QAAQ,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;QAChC,QAAQ,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QAC9B,OAAO,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;KACjC;IAED,KAAK,CAAC,WAAW,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;IACvC,SAAS,CAAC,MAAM,EAAE,CAAC;AACvB,CAAC,CAAA;AAED,MAAM,SAAS,GAAG,CAAC,GAAG,EAAE,EAAE;IAEtB,IAAI,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IAC3B,OAAO,GAAG,CAAC;AACf,CAAC,CAAA;AAED,OAAO,EAAE,QAAQ,EAAE,CAAC\"}"}
